{"version":3,"file":"commands.js","mappings":"MACA,ICDIA,EDCAC,EAAsB,GED1BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,GDGxBC,OAAOC,SAAQ,gBA4DU,oBAATC,KACVA,KACkB,oBAAXH,OACPA,YACkB,IAAXI,EAAAA,EACPA,EAAAA,OACAC,GAKJC,OA9DF,SAAgBC,GACdN,OAAOO,QAAQC,QAAQC,KAAKC,KAAKC,SAAS,QAAQ,SAAUC,GAC1DpB,EAAQoB,EAAMC,MAAMC,OACpBC,eAAkBf,OAAOO,QAAQC,QAAQC,KAAKO,GAAG,GAAGC,aACpDC,aAAgBlB,OAAOO,QAAQC,QAAQC,KAAKU,OAAOF,aAEnD,IAAIG,EAAO,CACTC,WAAYH,aACZI,YAAaP,eACbQ,WAAY/B,EACZgC,UAAW,GAGbC,EAAEC,KAAK,CACHC,IAAK,4CACLC,OAAQ,OACRR,KAAMA,IACPS,MAAK,SAACC,GACL,IAAMC,EAAU,CACdC,KAAMhC,OAAOiC,aAAaC,4BAA4BC,qBACtDJ,QAAS,iCACTK,KAAM,aACNC,YAAY,GAIdrC,OAAOO,QAAQC,QAAQC,KAAK6B,qBAAqBC,aAAa,SAAUR,GAGxEzB,EAAMkC,eACPC,MAAK,SAACC,GACL,IAAMX,EAAU,CACdC,KAAMhC,OAAOiC,aAAaC,4BAA4BC,qBACtDJ,QAAS,SACTK,KAAM,aACNC,YAAY,GAIdrC,OAAOO,QAAQC,QAAQC,KAAK6B,qBAAqBC,aAAa,SAAUR,GAGxEzB,EAAMkC,oB","sources":["webpack:///webpack/bootstrap?","webpack:///./src/commands/commands.js?","webpack:///webpack/runtime/global?"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","let corpo \r\nlet yutaro = 'commands.js' \r\n\r\nOffice.onReady(() => {\r\n});\r\n\r\n/**\r\n * Shows a notification when the add-in command is executed.\r\n * @param event {Office.AddinCommands.Event}\r\n */\r\n\r\n\r\nfunction action(event) {\r\n  Office.context.mailbox.item.body.getAsync('text', function (async) {\r\n    corpo = async.value.trim()\r\n    operator_email =  Office.context.mailbox.item.to[0].emailAddress\r\n    client_email =  Office.context.mailbox.item.sender.emailAddress\r\n\r\n    let data = {\r\n      to_andress: client_email, \r\n      from_adress: operator_email, \r\n      email_body: corpo, \r\n      receptivo: 1\r\n    }\r\n    \r\n    $.ajax({\r\n        url: 'https://dev.liveuniversity.com:2700/gerar_interacao_reply',\r\n        method: 'post',\r\n        data: data\r\n    }).then((res) => {\r\n        const message = {\r\n          type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\r\n          message: 'Receptive interaction Created!',\r\n          icon: \"Icon.80x80\",\r\n          persistent: true,\r\n        };\r\n  \r\n        // Show a notification message\r\n        Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\r\n  \r\n        // Be sure to indicate when the add-in command function is complete\r\n        event.completed();\r\n    }).fail((err)=>{\r\n        const message = {\r\n          type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\r\n          message: 'Error!',\r\n          icon: \"Icon.80x80\",\r\n          persistent: true,\r\n        };\r\n  \r\n        // Show a notification message\r\n        Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\r\n  \r\n        // Be sure to indicate when the add-in command function is complete\r\n        event.completed();\r\n    })\r\n\r\n\r\n    \r\n  });\r\n}\r\n\r\nfunction getGlobal() {\r\n  return typeof self !== \"undefined\"\r\n    ? self\r\n    : typeof window !== \"undefined\"\r\n    ? window\r\n    : typeof global !== \"undefined\"\r\n    ? global\r\n    : undefined;\r\n}\r\n\r\nconst g = getGlobal();\r\n\r\ng.action = action;\r\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"names":["corpo","__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","self","global","undefined","action","event","context","mailbox","item","body","getAsync","async","value","trim","operator_email","to","emailAddress","client_email","sender","data","to_andress","from_adress","email_body","receptivo","$","ajax","url","method","then","res","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","notificationMessages","replaceAsync","completed","fail","err"],"sourceRoot":""}